{"version":3,"sources":["../../../server/graphql/types/rootTypes.js"],"names":["AuthorType","name","description","fields","id","type","twitterHandle","PostType","title","body","author","resolve","post","find","a","author_id","ListingType","_id","address","website","email","phone"],"mappings":";;;;;;;AAAA;;AAMA;;;;AACA;;;;;;AAGA,MAAMA,aAAa,+BAAsB;AACvCC,QAAM,QADiC;AAEvCC,eAAa,0BAF0B;AAGvCC,UAAQ,OAAO;AACbC,QAAI,EAAEC,MAAM,mDAAR,EADS;AAEbJ,UAAM,EAAEI,MAAM,mDAAR,EAFO;AAGbC,mBAAe,EAAED,4BAAF;AAHF,GAAP;AAH+B,CAAtB,CAAnB;;AAUA,MAAME,WAAW,+BAAsB;AACrCN,QAAM,MAD+B;AAErCC,eAAa,wBAFwB;AAGrCC,UAAQ,OAAO;AACbC,QAAI,EAAEC,4BAAF,EADS;AAEbG,WAAO,EAAEH,4BAAF,EAFM;AAGbI,UAAM,EAAEJ,4BAAF,EAHO;AAIbK,YAAQ;AACNL,YAAML,UADA;AAENW,cAAQC,IAAR,EAAc;AACZ,eAAO,iBAAEC,IAAF,oBAAgBC,KAAKA,EAAEV,EAAF,KAASQ,KAAKG,SAAnC,CAAP;AACD;AAJK;AAJK,GAAP;AAH6B,CAAtB,CAAjB;;AAgBA,MAAMC,cAAc,+BAAsB;AACxCf,QAAM,SADkC;AAExCC,eAAa,2BAF2B;AAGxCC,UAAQ,OAAO;AACbc,SAAK,EAAEZ,4BAAF,EADQ;AAEbJ,UAAM,EAAEI,4BAAF,EAFO;AAGba,aAAS,EAAEb,4BAAF,EAHI;AAIbH,iBAAa,EAAEG,4BAAF,EAJA;AAKbc,aAAS,EAAEd,4BAAF,EALI;AAMbe,WAAO,EAAEf,4BAAF,EANM;AAObgB,WAAO,EAAEhB,4BAAF;AAPM,GAAP;AAHgC,CAAtB,CAApB;;QAcSL,U,GAAAA,U;QAAYO,Q,GAAAA,Q;QAAUS,W,GAAAA,W","file":"rootTypes.js","sourcesContent":["import {\r\n  GraphQLString,\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n} from 'graphql';\r\n\r\nimport _ from 'lodash';\r\nimport Authors from '../data/authors';\r\n\r\n\r\nconst AuthorType = new GraphQLObjectType({\r\n  name: 'Author',\r\n  description: 'This represent an author',\r\n  fields: () => ({\r\n    id: { type: new GraphQLNonNull(GraphQLString) },\r\n    name: { type: new GraphQLNonNull(GraphQLString) },\r\n    twitterHandle: { type: GraphQLString },\r\n  }),\r\n});\r\n\r\nconst PostType = new GraphQLObjectType({\r\n  name: 'Post',\r\n  description: 'This represents a Post',\r\n  fields: () => ({\r\n    id: { type: GraphQLString },\r\n    title: { type: GraphQLString },\r\n    body: { type: GraphQLString },\r\n    author: {\r\n      type: AuthorType,\r\n      resolve(post) {\r\n        return _.find(Authors, a => a.id === post.author_id);\r\n      },\r\n    },\r\n  }),\r\n});\r\n\r\nconst ListingType = new GraphQLObjectType({\r\n  name: 'Listing',\r\n  description: 'This represents a listing',\r\n  fields: () => ({\r\n    _id: { type: GraphQLString },\r\n    name: { type: GraphQLString },\r\n    address: { type: GraphQLString },\r\n    description: { type: GraphQLString },\r\n    website: { type: GraphQLString },\r\n    email: { type: GraphQLString },\r\n    phone: { type: GraphQLString },\r\n  }),\r\n});\r\n\r\nexport { AuthorType, PostType, ListingType };\r\n"]}